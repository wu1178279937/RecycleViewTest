apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "junte.com.recycleviewtest"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk{
         abiFilter ""
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    dexOptions{
        preDexLibraries true
        maxProcessCount 4
        javaMaxHeapSize "2048m"
    }

    aaptOptions {
        cruncherEnabled false
    }

     task hello(dependsOn:'ab'){
         doLast {
             println("Hello world")
         }
     }

    hello.doFirst{
       println "do First $hello.name task"+noActionTask.myTask
    }

    task ab<<{
        print("dkfdskf")
    }

    task noActionTask {
         ext.myTask="values haha "
        println 'I am noActionTask'
    }

    4.times {
        counter->
            task "task$counter"<<{
                println("I am task numbler $counter")
            }
    }

    task bn<<{
        println("$project.projectDir")
        FileTree tree = fileTree(dir: 'src/main')
         tree.include "**/*.java"
          tree.each {
              File file->
                  println file.name
          }



    }








}

public class BuildTimeListener implements TaskExecutionListener,BuildListener{

    private Clock clock;
    private  times=[]
    @Override
    void buildStarted(Gradle gradle) {

    }

    @Override
    void settingsEvaluated(Settings settings) {

    }

    @Override
    void projectsLoaded(Gradle gradle) {

    }

    @Override
    void projectsEvaluated(Gradle gradle) {

    }

    @Override
    void buildFinished(BuildResult result) {
           for (time in times){
               if (time[0]>=50){
                    println  time
               }
           }
    }

    @Override
    void beforeExecute(Task task) {
       clock=new org.gradle.util.Clock()

    }

    @Override
    void afterExecute(Task task, TaskState state) {
            def  ms=clock.timeInMs;
         times.add([ms,task.path])

    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    testCompile 'junit:junit:4.12'



    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.android.support:design:25.0.1'
    compile 'com.android.support:recyclerview-v7:25.0.1'
    //刷新控件
    compile 'com.cjj.materialrefeshlayout:library:1.3.0'


    //网络加载框架
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    compile 'com.jakewharton:butterknife:7.0.1'
    // network
    compile 'com.lzy.net:okgo:+'
    compile 'com.zhy:okhttputils:2.6.2'


    compile 'com.github.bumptech.glide:glide:3.7.0'
    //图片加载库

    compile 'cn.bingoogolapple:bga-banner:2.1.6@aar'
    // 带数字指示器的轮播图
    //gson解析
    compile 'com.google.code.gson:gson:2.2.4'


    compile 'com.gxz.stickynavlayout:library:1.3.2'

//轮播图
    compile 'com.daimajia.slider:library:1.1.5@aar'


    compile 'com.squareup.picasso:picasso:2.3.2'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.zhy:okhttputils:2.6.2'

    compile 'com.android.support:cardview-v7:25.0.1'
    compile 'com.google.android:flexbox:0.2.5'

}

project.gradle.addListener(new BuildTimeListener())